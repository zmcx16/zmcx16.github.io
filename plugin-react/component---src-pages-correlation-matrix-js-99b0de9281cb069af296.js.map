{"version":3,"sources":["webpack:///./node_modules/recharts/es6/chart/LineChart.js","webpack:///./src/components/correlation-matrix/marketCorrelationMatrix.module.scss","webpack:///./src/components/correlation-matrix/rollingCorrelationChart.js","webpack:///./src/components/correlation-matrix/marketCorrelationMatrix.js","webpack:///./src/pages/correlation-matrix.js"],"names":["LineChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp","formatAxisMap","module","exports","RollingCorrelationChart","_ref","data","description","React","createElement","style","width","window","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tickItem","moment","format","YAxis","domain","Tooltip","Legend","Line","type","name","stroke","dot","pcorr","x","y","sumX","sumY","sumXY","sumX2","sumY2","minLength","length","Math","min","forEach","reduce","xi","idx","yi","sqrt","getTableCategories","table","map","category","symbol","src","table2MatrixData","categories","acc","rowSymbolSrc","find","d","categoryCorrelations","acc2","colSymbolSrc","value","correlations","pValue","dataUrl","row","findIndex","p","column","color","correlation","alpha","abs","isNaN","negativeColor","positiveColor","concat","_toConsumableArray","MatrixNode","popperTipRef","modalWindowRef","nodeStyle","marketCorrelationMatrixStyle","matrixNode","matrixNodeFirstRow","matrixNodeFirstColumn","message","fetch1","useFetch","cachePolicy","fetch2","className","background","onMouseOver","event","current","setOpen","currentTarget","onMouseOut","onClick","getMarketData","async","fetchObj","fileName","btoa","resp_data","get","response","ok","Promise","all","then","allResponses","overDateInterval","d1","d2","days","Date","parse","convertDictData","arr","key_data_val","key_data_is_monthly_intervals","i","v","parseFloat","replace","dt","date_offset","getMonth","toString","padStart","getFullYear","dataDict1","dataDict2","keys","getIntersectionKey","o1","o2","Object","filter","hasOwnProperty","bind","slidingWindowSize","startCalcTime","rollingCorrelationWindowDays","max","pcorrData","dataX","dataY","slice","e","push","score","popModalWindow","catch","toFixed","PopperTip","_ref2","a","msg","setAnchorEl","setMessage","setOpenPopper","getOpen","openPopper","useState","anchorEl","Popper","open","transition","_ref3","TransitionProps","Fade","assign","timeout","Paper","padding","whiteSpace","lineHeight","textAlign","MarketCorrelationMatrix","useRef","popPureModal","setTable","useEffect","console","log","getCorrelationTable","Fragment","container","display","justifyItems","alignItems","gridTemplateColumns","repeat","matrixColTitle","key","shortid","generate","val","renderRowsTitleAndData","output","matrixRowTitle","Link","href","target","rel","ModalWindow","CorrelationMatrixPage","StylesProvider","injectFirst"],"mappings":"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","file":"component---src-pages-correlation-matrix-js-99b0de9281cb069af296.js","sourcesContent":["/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"marketCorrelationMatrix-module--container--1PUvo\",\"matrixColTitle\":\"marketCorrelationMatrix-module--matrixColTitle--3EqUq\",\"matrixRowTitle\":\"marketCorrelationMatrix-module--matrixRowTitle--1b_7B\",\"matrixNodeFirstRow\":\"marketCorrelationMatrix-module--matrixNodeFirstRow--1j9rp\",\"matrixNodeFirstColumn\":\"marketCorrelationMatrix-module--matrixNodeFirstColumn--afYwl\",\"matrixNode\":\"marketCorrelationMatrix-module--matrixNode--2FWdd\"};","import React from 'react'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts'\n\nimport moment from 'moment'\n\nconst RollingCorrelationChart = ({ data, description }) => {\n  return (\n    <div style={{ width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\n            return moment(tickItem).format('MM/DD/YYYY')\n          }} />\n          <YAxis domain={[-1, 1]}/>\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" name={description} dataKey=\"Score\" stroke=\"#8884d8\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\n\nexport default RollingCorrelationChart\n","import React, { useState, useRef, useEffect } from 'react'\nimport Link from '@mui/material/Link'\nimport Popper from '@mui/material/Popper'\nimport Fade from '@mui/material/Fade'\nimport Paper from '@mui/material/Paper'\nimport shortid from 'shortid'\nimport useFetch from 'use-http'\n\nimport ModalWindow from '../modalWindow'\nimport { rollingCorrelationWindowDays } from '../../common/def'\nimport RollingCorrelationChart from './rollingCorrelationChart'\n\nimport marketCorrelationMatrixStyle from './marketCorrelationMatrix.module.scss'\n\nconst pcorr = (x, y) => {\n  let sumX = 0,\n    sumY = 0,\n    sumXY = 0,\n    sumX2 = 0,\n    sumY2 = 0;\n  const minLength = x.length = y.length = Math.min(x.length, y.length),\n    reduce = (xi, idx) => {\n      const yi = y[idx];\n      sumX += xi;\n      sumY += yi;\n      sumXY += xi * yi;\n      sumX2 += xi * xi;\n      sumY2 += yi * yi;\n    }\n  x.forEach(reduce)\n  return (minLength * sumXY - sumX * sumY) / Math.sqrt((minLength * sumX2 - sumX * sumX) * (minLength * sumY2 - sumY * sumY))\n}\n\nconst getTableCategories = (table) => {\n  return table.map((category) => {\n    return {\n      symbol: category.symbol,\n      src: category.src\n    }\n  })\n}\n\nconst table2MatrixData = (table) => {\n\n  const categories = getTableCategories(table)\n\n  const negativeColor = (correlation) => {\n    const alpha = Math.abs(correlation)\n    return `rgba(243, 87, 86, ${isNaN(alpha) ? 0 : alpha})`\n  }\n\n  const positiveColor = (correlation) => {\n    const alpha = Math.abs(correlation);\n    return `rgba(46, 233, 255, ${isNaN(alpha) ? 0 : alpha})`\n  }\n\n  \n\n  const parsedData = categories.reduce((acc, rowSymbolSrc) => {\n    const category = table.find((d) => d.symbol === rowSymbolSrc.symbol)\n    const categoryCorrelations = categories.reduce((acc2, colSymbolSrc) => {\n      const value = category.correlations[colSymbolSrc.symbol]['value']\n      const pValue = category.correlations[colSymbolSrc.symbol]['p_value']\n      const dataUrl = category['dataUrl']\n      const row = categories.findIndex(p => p.symbol == rowSymbolSrc.symbol)\n      const column = categories.findIndex(p => p.symbol == colSymbolSrc.symbol)\n      const color =\n        value < 0 ? negativeColor(value) : positiveColor(value)\n\n      return [\n        ...acc2,\n        {\n          colSymbolSrc,\n          rowSymbolSrc,\n          row,\n          column,\n          value,\n          pValue,\n          dataUrl,\n          color\n        }\n      ]\n    }, [])\n    return [...acc, ...categoryCorrelations];\n  }, [])\n\n  return parsedData\n}\n\nconst MatrixNode = ({ data, popperTipRef, modalWindowRef }) => {\n  let nodeStyle = marketCorrelationMatrixStyle.matrixNode\n  if (data.row === 0) {\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstRow\n  }\n\n  if (data.column === 0) {\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstColumn\n  }\n\n  const message = \n`${data.colSymbolSrc.symbol} has a ${data.value} correlation to ${data.rowSymbolSrc.symbol}\np-value: ${data.pValue}\n`\n  const fetch1 = useFetch({ cachePolicy: 'no-cache' })\n  const fetch2 = useFetch({ cachePolicy: 'no-cache' })\n\n  return (\n    <div className={nodeStyle}>\n      <div style={{ background: data.color }} onMouseOver={(event)=>{\n        popperTipRef.current.setOpen(true, event.currentTarget, message)\n      }} onMouseOut={() => {\n        popperTipRef.current.setOpen(false)\n      }} onClick={()=>{\n        const getMarketData = async (src, symbol, fetchObj) => {\n          let fileName = btoa(src + '_' + symbol) + '.json'\n          const resp_data = await fetchObj.get('/plugin-react/markets/' + fileName)\n          if (fetchObj.response.ok && resp_data.data && resp_data.data.length > 0) {\n            return resp_data.data\n          }\n          else {\n            return null\n          }\n        }\n\n        Promise.all([\n          getMarketData(data.colSymbolSrc.src, data.colSymbolSrc.symbol, fetch1),\n          getMarketData(data.rowSymbolSrc.src, data.rowSymbolSrc.symbol, fetch2),\n        ]).then((allResponses) => {\n          // console.log(allResponses)\n          if (allResponses.length == 2 && allResponses[0] !== null && allResponses[1] !== null) {\n            const overDateInterval = (d1, d2, days) => {\n              return Date.parse(d1) - Date.parse(d2) > days * 24 * 60 * 60 * 1000\n            }\n\n            const convertDictData = (arr) => {\n              let key_data_val = {}\n              const key_data_is_monthly_intervals = overDateInterval(arr[0][\"Date\"], arr[1][\"Date\"], 15)\n              arr.forEach((d, i) => {\n                let v = d[\"Close\"]\n                if (typeof v === 'string') {\n                  v = parseFloat(v.replace(\"%\", \"\"))\n                }\n\n                if (key_data_is_monthly_intervals) {\n                  let dt = Date.parse(d[\"Date\"])\n                  const date_offset = (dt.getMonth() + 1).toString().padStart(2, \"0\") + \"/01/\" + dt.getFullYear().toString()\n                  key_data_val[date_offset] = v\n                } else {\n                  key_data_val[d[\"Date\"]] = v\n                }\n              })\n              return key_data_val\n            }\n\n            let dataDict1 = convertDictData(allResponses[0])\n            let dataDict2 = convertDictData(allResponses[1])\n\n            const getIntersectionKey = (o1, o2) => {\n              return Object.keys(o1).filter({}.hasOwnProperty.bind(o2));\n            }\n\n            const keys = getIntersectionKey(dataDict1, dataDict2)\n            let slidingWindowSize = 2\n            let startCalcTime = Date.parse(keys[keys.length - 1]) + rollingCorrelationWindowDays * 24 * 60 * 60 * 1000\n            for (let i = keys.length - 2; i>=0; i--) {\n              if (startCalcTime <= Date.parse(keys[i])) {\n                slidingWindowSize = Math.max(slidingWindowSize, keys.length - 1 - i + 1)\n                break\n              }\n            }\n\n            let pcorrData = []\n            for (let i = keys.length - 1 - slidingWindowSize + 1; i >= 0; i--) {\n              \n              let dataX = []\n              let dataY = []\n              let dataWindow = keys.slice(i, i + slidingWindowSize)\n              dataWindow.forEach((e)=>{\n                dataX.push(dataDict1[e])\n                dataY.push(dataDict2[e])\n              })\n              let score = pcorr(dataX, dataY)\n              pcorrData.push({ 'Date': keys[i], 'Score': score})\n            }\n\n            // console.log(pcorrData)\n            const description = `${data.rowSymbolSrc.symbol} - ${data.colSymbolSrc.symbol} Rolling ${rollingCorrelationWindowDays} days Correlation`\n            modalWindowRef.current.popModalWindow(<RollingCorrelationChart data={pcorrData} description={description} />)\n          } else {\n            modalWindowRef.current.popModalWindow(<div>Load some market data failed</div>)\n          }\n        }).catch(() => {\n          modalWindowRef.current.popModalWindow(<div>Load market data failed</div>)\n        })\n      }}>\n        {data.value === 'NaN' ? 'NaN' : data.value.toFixed(2).replace(/(\\.0*|(?<=(\\..*))0*)$/, '').replace(\"0.\", \".\")}\n      </div>\n    </div>\n  )\n}\n\nconst PopperTip = ({ popperTipRef }) =>{\n\n  // PopperTip API\n  popperTipRef.current = {\n    setOpen: (v, a=null, msg='') => {\n      if (v) {\n        setAnchorEl(a)\n        setMessage(msg)\n      }\n      setOpenPopper(v)\n    },\n    getOpen: () => {\n      return openPopper\n    }\n  }\n\n  const [openPopper, setOpenPopper] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [message, setMessage] = useState('')\n\n  return (\n    <Popper open={openPopper} anchorEl={anchorEl} transition>\n      {({ TransitionProps }) => (\n        <Fade {...TransitionProps} timeout={350}>\n          <Paper style={{padding: '10px'}}>\n            <span style={{ whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{message}</span>\n          </Paper>\n        </Fade>\n      )}\n    </Popper>\n  )\n}\n\nconst MarketCorrelationMatrix = () => {\n\n  const modalWindowRef = useRef({\n    popModalWindow: null,\n    popPureModal: null,\n  })\n\n  const popperTipRef = useRef({\n    setOpen: null,\n    getOpen: null,\n  })\n\n  const [table, setTable] = useState([])\n\n  const { get, response } = useFetch({ cachePolicy: 'no-cache' })\n  const getCorrelationTable = async () => {\n    const resp_data = await get('/plugin-react/market-correlation-matrix.json')\n    if (response.ok) {\n      console.log(resp_data)\n      setTable(resp_data['table'])\n    }\n    else {\n      modalWindowRef.current.popModalWindow(<div>Load market-correlation-matrix.json failed</div>)\n      setTable([])\n    }\n  }\n\n  const renderColumnTitle = () => {\n    return (\n      <>\n        <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}></div>\n        {getTableCategories(table).map((val) => {\n          return <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}>{val.symbol}</div>\n        })}\n      </>\n    )\n  }\n\n  const renderRowsTitleAndData = () => {\n    let output = []\n    table2MatrixData(table).forEach((d, i)=>{\n      if (i % table.length === 0) {\n        output.push(\n          <div className={marketCorrelationMatrixStyle.matrixRowTitle} key={shortid.generate()}>\n            <Link href={d.dataUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n              <span>{d.rowSymbolSrc.symbol}</span>\n            </Link>\n          </div>)\n      }\n      output.push(<MatrixNode data={d} popperTipRef={popperTipRef} modalWindowRef={modalWindowRef} key={shortid.generate()} />)\n    })\n\n    return output\n  }\n\n  useEffect(() => {\n    // componentDidMount is here!\n    // componentDidUpdate is here!\n    getCorrelationTable()\n    return () => {\n      // componentWillUnmount is here!\n    }\n  }, [])\n\n  return (\n    <>\n      <div className={marketCorrelationMatrixStyle.container}>\n        <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center', gridTemplateColumns: '200px ' + '40px '.repeat(getTableCategories(table).length)}}>\n          {renderColumnTitle()}\n          {renderRowsTitleAndData()}\n        </div>\n      </div>\n      <PopperTip popperTipRef={popperTipRef}/>\n      <ModalWindow modalWindowRef={modalWindowRef} />\n    </>\n  )\n}\n\nexport default MarketCorrelationMatrix\n","import React from 'react'\nimport { StylesProvider } from '@mui/styles'\n\nimport MarketCorrelationMatrix from '../components/correlation-matrix/marketCorrelationMatrix'\n\nconst CorrelationMatrixPage = () => {\n  return (\n    <StylesProvider injectFirst>\n      <MarketCorrelationMatrix />\n    </StylesProvider>\n  )\n}\n\nexport default CorrelationMatrixPage\n"],"sourceRoot":""}