{"version":3,"sources":["webpack:///./node_modules/recharts/es6/chart/LineChart.js","webpack:///./src/components/correlation-matrix/marketCorrelationMatrix.module.scss","webpack:///./src/components/correlation-matrix/rollingCorrelationChart.js","webpack:///./src/components/correlation-matrix/marketCorrelationMatrix.js","webpack:///./src/pages/correlation-matrix.js"],"names":["LineChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp","formatAxisMap","module","exports","RollingCorrelationChart","data","description","style","width","window","innerWidth","height","innerHeight","maxWidth","maxHeight","ResponsiveContainer","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","tickItem","moment","format","YAxis","domain","Tooltip","Legend","Line","type","name","stroke","dot","getTableCategories","table","map","category","symbol","src","table2MatrixData","categories","reduce","acc","rowSymbolSrc","find","d","categoryCorrelations","acc2","colSymbolSrc","correlation","alpha","value","correlations","pValue","dataUrl","row","findIndex","p","column","color","Math","abs","isNaN","positiveColor","MatrixNode","popperTipRef","modalWindowRef","nodeStyle","marketCorrelationMatrixStyle","matrixNode","matrixNodeFirstRow","matrixNodeFirstColumn","message","fetch1","useFetch","cachePolicy","fetch2","className","background","onMouseOver","event","current","setOpen","currentTarget","onMouseOut","onClick","getMarketData","fetchObj","a","fileName","btoa","get","resp_data","response","ok","length","Promise","all","then","allResponses","o1","o2","convertDictData","arr","d1","d2","days","key_data_val","key_data_is_monthly_intervals","Date","parse","forEach","i","v","parseFloat","replace","dt","date_offset","getMonth","toString","padStart","getFullYear","dataDict1","dataDict2","keys","Object","filter","hasOwnProperty","bind","slidingWindowSize","startCalcTime","rollingCorrelationWindowDays","max","pcorrData","dataX","dataY","slice","e","push","x","y","sumX","sumY","sumXY","sumX2","sumY2","minLength","score","min","xi","idx","yi","sqrt","popModalWindow","catch","toFixed","PopperTip","msg","setAnchorEl","setMessage","setOpenPopper","getOpen","openPopper","useState","anchorEl","Popper","open","transition","TransitionProps","Fade","timeout","Paper","padding","whiteSpace","lineHeight","textAlign","MarketCorrelationMatrix","output","useRef","popPureModal","setTable","getCorrelationTable","console","log","useEffect","container","display","justifyItems","alignItems","gridTemplateColumns","repeat","matrixColTitle","key","shortid","generate","val","matrixRowTitle","Link","href","target","rel","CorrelationMatrixPage","StylesProvider","injectFirst"],"mappings":"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","file":"component---src-pages-correlation-matrix-js-22d0dd3c4ee484992d20.js","sourcesContent":["/**\n * @fileOverview Line Chart\n */\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport var LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap: formatAxisMap\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"marketCorrelationMatrix-module--container--1PUvo\",\"matrixColTitle\":\"marketCorrelationMatrix-module--matrixColTitle--3EqUq\",\"matrixRowTitle\":\"marketCorrelationMatrix-module--matrixRowTitle--1b_7B\",\"matrixNodeFirstRow\":\"marketCorrelationMatrix-module--matrixNodeFirstRow--1j9rp\",\"matrixNodeFirstColumn\":\"marketCorrelationMatrix-module--matrixNodeFirstColumn--afYwl\",\"matrixNode\":\"marketCorrelationMatrix-module--matrixNode--2FWdd\"};","import React from 'react'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts'\n\nimport moment from 'moment'\n\nconst RollingCorrelationChart = ({ data, description }) => {\n  return (\n    <div style={{ width: (window.innerWidth - 100) + 'px', height: (window.innerHeight - 100) + 'px', maxWidth: '1200px', maxHeight: '600px' }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"Date\" tickFormatter={(tickItem) => {\n            return moment(tickItem).format('MM/DD/YYYY')\n          }} />\n          <YAxis domain={[-1, 1]}/>\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" name={description} dataKey=\"Score\" stroke=\"#8884d8\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\n\nexport default RollingCorrelationChart\n","import React, { useState, useRef, useEffect } from 'react'\nimport Link from '@mui/material/Link'\nimport Popper from '@mui/material/Popper'\nimport Fade from '@mui/material/Fade'\nimport Paper from '@mui/material/Paper'\nimport shortid from 'shortid'\nimport useFetch from 'use-http'\n\nimport ModalWindow from '../modalWindow'\nimport { rollingCorrelationWindowDays } from '../../common/def'\nimport RollingCorrelationChart from './rollingCorrelationChart'\n\nimport marketCorrelationMatrixStyle from './marketCorrelationMatrix.module.scss'\n\nconst pcorr = (x, y) => {\n  let sumX = 0,\n    sumY = 0,\n    sumXY = 0,\n    sumX2 = 0,\n    sumY2 = 0;\n  const minLength = x.length = y.length = Math.min(x.length, y.length),\n    reduce = (xi, idx) => {\n      const yi = y[idx];\n      sumX += xi;\n      sumY += yi;\n      sumXY += xi * yi;\n      sumX2 += xi * xi;\n      sumY2 += yi * yi;\n    }\n  x.forEach(reduce)\n  return (minLength * sumXY - sumX * sumY) / Math.sqrt((minLength * sumX2 - sumX * sumX) * (minLength * sumY2 - sumY * sumY))\n}\n\nconst getTableCategories = (table) => {\n  return table.map((category) => {\n    return {\n      symbol: category.symbol,\n      src: category.src\n    }\n  })\n}\n\nconst table2MatrixData = (table) => {\n\n  const categories = getTableCategories(table)\n\n  const negativeColor = (correlation) => {\n    const alpha = Math.abs(correlation)\n    return `rgba(243, 87, 86, ${isNaN(alpha) ? 0 : alpha})`\n  }\n\n  const positiveColor = (correlation) => {\n    const alpha = Math.abs(correlation);\n    return `rgba(46, 233, 255, ${isNaN(alpha) ? 0 : alpha})`\n  }\n\n  \n\n  const parsedData = categories.reduce((acc, rowSymbolSrc) => {\n    const category = table.find((d) => d.symbol === rowSymbolSrc.symbol)\n    const categoryCorrelations = categories.reduce((acc2, colSymbolSrc) => {\n      const value = category.correlations[colSymbolSrc.symbol]['value']\n      const pValue = category.correlations[colSymbolSrc.symbol]['p_value']\n      const dataUrl = category['dataUrl']\n      const row = categories.findIndex(p => p.symbol == rowSymbolSrc.symbol)\n      const column = categories.findIndex(p => p.symbol == colSymbolSrc.symbol)\n      const color =\n        value < 0 ? negativeColor(value) : positiveColor(value)\n\n      return [\n        ...acc2,\n        {\n          colSymbolSrc,\n          rowSymbolSrc,\n          row,\n          column,\n          value,\n          pValue,\n          dataUrl,\n          color\n        }\n      ]\n    }, [])\n    return [...acc, ...categoryCorrelations];\n  }, [])\n\n  return parsedData\n}\n\nconst MatrixNode = ({ data, popperTipRef, modalWindowRef }) => {\n  let nodeStyle = marketCorrelationMatrixStyle.matrixNode\n  if (data.row === 0) {\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstRow\n  }\n\n  if (data.column === 0) {\n    nodeStyle += ' ' + marketCorrelationMatrixStyle.matrixNodeFirstColumn\n  }\n\n  const message = \n`${data.colSymbolSrc.symbol} has a ${data.value} correlation to ${data.rowSymbolSrc.symbol}\np-value: ${data.pValue}\n`\n  const fetch1 = useFetch({ cachePolicy: 'no-cache' })\n  const fetch2 = useFetch({ cachePolicy: 'no-cache' })\n\n  return (\n    <div className={nodeStyle}>\n      <div style={{ background: data.color }} onMouseOver={(event)=>{\n        popperTipRef.current.setOpen(true, event.currentTarget, message)\n      }} onMouseOut={() => {\n        popperTipRef.current.setOpen(false)\n      }} onClick={()=>{\n        const getMarketData = async (src, symbol, fetchObj) => {\n          let fileName = btoa(src + '_' + symbol) + '.json'\n          const resp_data = await fetchObj.get('/plugin-react/markets/' + fileName)\n          if (fetchObj.response.ok && resp_data.data && resp_data.data.length > 0) {\n            return resp_data.data\n          }\n          else {\n            return null\n          }\n        }\n\n        Promise.all([\n          getMarketData(data.colSymbolSrc.src, data.colSymbolSrc.symbol, fetch1),\n          getMarketData(data.rowSymbolSrc.src, data.rowSymbolSrc.symbol, fetch2),\n        ]).then((allResponses) => {\n          // console.log(allResponses)\n          if (allResponses.length == 2 && allResponses[0] !== null && allResponses[1] !== null) {\n            const overDateInterval = (d1, d2, days) => {\n              return Date.parse(d1) - Date.parse(d2) > days * 24 * 60 * 60 * 1000\n            }\n\n            const convertDictData = (arr) => {\n              let key_data_val = {}\n              const key_data_is_monthly_intervals = overDateInterval(arr[0][\"Date\"], arr[1][\"Date\"], 15)\n              arr.forEach((d, i) => {\n                let v = d[\"Close\"]\n                if (typeof v === 'string') {\n                  v = parseFloat(v.replace(\"%\", \"\"))\n                }\n\n                if (key_data_is_monthly_intervals) {\n                  let dt = Date.parse(d[\"Date\"])\n                  const date_offset = (dt.getMonth() + 1).toString().padStart(2, \"0\") + \"/01/\" + dt.getFullYear().toString()\n                  key_data_val[date_offset] = v\n                } else {\n                  key_data_val[d[\"Date\"]] = v\n                }\n              })\n              return key_data_val\n            }\n\n            let dataDict1 = convertDictData(allResponses[0])\n            let dataDict2 = convertDictData(allResponses[1])\n\n            const getIntersectionKey = (o1, o2) => {\n              return Object.keys(o1).filter({}.hasOwnProperty.bind(o2));\n            }\n\n            const keys = getIntersectionKey(dataDict1, dataDict2)\n            let slidingWindowSize = 2\n            let startCalcTime = Date.parse(keys[keys.length - 1]) + rollingCorrelationWindowDays * 24 * 60 * 60 * 1000\n            for (let i = keys.length - 2; i>=0; i--) {\n              if (startCalcTime <= Date.parse(keys[i])) {\n                slidingWindowSize = Math.max(slidingWindowSize, keys.length - 1 - i + 1)\n                break\n              }\n            }\n\n            let pcorrData = []\n            for (let i = keys.length - 1 - slidingWindowSize + 1; i >= 0; i--) {\n              \n              let dataX = []\n              let dataY = []\n              let dataWindow = keys.slice(i, i + slidingWindowSize)\n              dataWindow.forEach((e)=>{\n                dataX.push(dataDict1[e])\n                dataY.push(dataDict2[e])\n              })\n              let score = pcorr(dataX, dataY)\n              pcorrData.push({ 'Date': keys[i], 'Score': score})\n            }\n\n            // console.log(pcorrData)\n            const description = `${data.rowSymbolSrc.symbol} - ${data.colSymbolSrc.symbol} Rolling ${rollingCorrelationWindowDays} days Correlation`\n            modalWindowRef.current.popModalWindow(<RollingCorrelationChart data={pcorrData} description={description} />)\n          } else {\n            modalWindowRef.current.popModalWindow(<div>Load some market data failed</div>)\n          }\n        }).catch(() => {\n          modalWindowRef.current.popModalWindow(<div>Load market data failed</div>)\n        })\n      }}>\n        {data.value === 'NaN' ? 'NaN' : data.value.toFixed(2).replace(/(\\.0*|(?<=(\\..*))0*)$/, '').replace(\"0.\", \".\")}\n      </div>\n    </div>\n  )\n}\n\nconst PopperTip = ({ popperTipRef }) =>{\n\n  // PopperTip API\n  popperTipRef.current = {\n    setOpen: (v, a=null, msg='') => {\n      if (v) {\n        setAnchorEl(a)\n        setMessage(msg)\n      }\n      setOpenPopper(v)\n    },\n    getOpen: () => {\n      return openPopper\n    }\n  }\n\n  const [openPopper, setOpenPopper] = useState(false)\n  const [anchorEl, setAnchorEl] = useState(null)\n  const [message, setMessage] = useState('')\n\n  return (\n    <Popper open={openPopper} anchorEl={anchorEl} transition>\n      {({ TransitionProps }) => (\n        <Fade {...TransitionProps} timeout={350}>\n          <Paper style={{padding: '10px'}}>\n            <span style={{ whiteSpace: 'pre-line', lineHeight: '20px', textAlign: 'center'}}>{message}</span>\n          </Paper>\n        </Fade>\n      )}\n    </Popper>\n  )\n}\n\nconst MarketCorrelationMatrix = () => {\n\n  const modalWindowRef = useRef({\n    popModalWindow: null,\n    popPureModal: null,\n  })\n\n  const popperTipRef = useRef({\n    setOpen: null,\n    getOpen: null,\n  })\n\n  const [table, setTable] = useState([])\n\n  const { get, response } = useFetch({ cachePolicy: 'no-cache' })\n  const getCorrelationTable = async () => {\n    const resp_data = await get('/plugin-react/market-correlation-matrix.json')\n    if (response.ok) {\n      console.log(resp_data)\n      setTable(resp_data['table'])\n    }\n    else {\n      modalWindowRef.current.popModalWindow(<div>Load market-correlation-matrix.json failed</div>)\n      setTable([])\n    }\n  }\n\n  const renderColumnTitle = () => {\n    return (\n      <>\n        <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}></div>\n        {getTableCategories(table).map((val) => {\n          return <div className={marketCorrelationMatrixStyle.matrixColTitle} key={shortid.generate()}>{val.symbol}</div>\n        })}\n      </>\n    )\n  }\n\n  const renderRowsTitleAndData = () => {\n    let output = []\n    table2MatrixData(table).forEach((d, i)=>{\n      if (i % table.length === 0) {\n        output.push(\n          <div className={marketCorrelationMatrixStyle.matrixRowTitle} key={shortid.generate()}>\n            <Link href={d.dataUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n              <span>{d.rowSymbolSrc.symbol}</span>\n            </Link>\n          </div>)\n      }\n      output.push(<MatrixNode data={d} popperTipRef={popperTipRef} modalWindowRef={modalWindowRef} key={shortid.generate()} />)\n    })\n\n    return output\n  }\n\n  useEffect(() => {\n    // componentDidMount is here!\n    // componentDidUpdate is here!\n    getCorrelationTable()\n    return () => {\n      // componentWillUnmount is here!\n    }\n  }, [])\n\n  return (\n    <>\n      <div className={marketCorrelationMatrixStyle.container}>\n        <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center', gridTemplateColumns: '200px ' + '40px '.repeat(getTableCategories(table).length)}}>\n          {renderColumnTitle()}\n          {renderRowsTitleAndData()}\n        </div>\n      </div>\n      <PopperTip popperTipRef={popperTipRef}/>\n      <ModalWindow modalWindowRef={modalWindowRef} />\n    </>\n  )\n}\n\nexport default MarketCorrelationMatrix\n","import React from 'react'\nimport { StylesProvider } from '@mui/styles'\n\nimport MarketCorrelationMatrix from '../components/correlation-matrix/marketCorrelationMatrix'\n\nconst CorrelationMatrixPage = () => {\n  return (\n    <StylesProvider injectFirst>\n      <MarketCorrelationMatrix />\n    </StylesProvider>\n  )\n}\n\nexport default CorrelationMatrixPage\n"],"sourceRoot":""}